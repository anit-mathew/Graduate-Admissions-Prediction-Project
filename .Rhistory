install.packages("nortest")
install.packages("ggcorrplot")
install.packages("sjPlot")
install.packages("sjmisc")
install.packages("sjlabelled")
install.packages("kableExtra")
library(reshape2)
library(ggplot2)
library(rpart)
library(dplyr)
library(rpart.plot)
library(randomForest)
library(kableExtra)
library(broom)
library(tidyverse)
library(caret)
library(leaps)
library(car)
library(knitr)
setwd("~/Project/Statistics-Project")
data <- read.csv("Admission_Predict.csv")
data <- data[,-1]
set.seed(4543)
rf.fit <- randomForest(data$Chance.of.Admit ~ ., data=data,
keep.forest=FALSE, importance=TRUE)
ImpData <- as.data.frame(importance(rf.fit))
ImpData$Var.Names <- row.names(ImpData)
ggplot(ImpData, aes(x=Var.Names, y=`%IncMSE`))
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=`%IncMSE`), color="skyblue")
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6)
theme_light()
coord_flip()
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
rf.fit
ggplot(ImpData, aes(x=Var.Names, y=`%IncMSE`)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=`%IncMSE`), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip()+
theme(legend.position="bottom",
panel.grid.major.y = element_blank(),panel.border = element_blank(),
axis.ticks.y = element_blank())+
ggtitle("Importance Plot for the Variables")
d <- cor(data)
library(ggcorrplot)
ggcorrplot(d, hc.order = TRUE, type = "lower",lab = TRUE) +
labs(title='Correlation Matrix for All Variables')
data <- read.csv("Admission_Predict.csv")
data <- data[,-1]
model_reg <- regsubsets(Chance.of.Admit ~ ., data=data, nvmax=7, intercept = FALSE)
best.fit <- summary(model_reg)
plot(best.fit$bic, xlab = "Number of Variables", ylab = "Adjusted RSq", type = "l")
model_reg <- regsubsets(Chance.of.Admit ~ ., data=data, nvmax=7, intercept = FALSE)
best.fit <- summary(model_reg)
plot(best.fit$adjr2, xlab = "Number of Variables", ylab = "Adjusted RSq", type = "l")
plot(model_reg,scale = "adjr2")
library(olsrr)
data <- read.csv("Admission_Predict.csv")
data <- data[,-1]
model <- lm(Chance.of.Admit ~ ., data=data)
k_subset<- ols_step_best_subset(model, details= TRUE)
print(k_subset)
plot(k_subset)
model <- lm(Chance.of.Admit ~ GRE.Score + TOEFL.Score + LOR + CGPA + Research + University.Rating, data=data)
ss <- capture.output(summary(model))
cat(ss[-(1:10)],sep="\n")
vif(model)
model <- lm(Chance.of.Admit ~ GRE.Score + TOEFL.Score + LOR + CGPA + Research, data=data)
vif(model)
model <- lm(Chance.of.Admit ~ GRE.Score + LOR + CGPA + Research + University.Rating, data=data)
ss <- capture.output(summary(model))
cat(ss[-(1:10)],sep="\n")
vif(model)
data_gre <- data[,-8]
View(data_gre)
View(data)
View(data)
View(data_gre)
mean(data$GRE.Score)
